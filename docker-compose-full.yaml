version: '3.8'

services:
  powersync-sync:
    image: journeyapps/powersync-service:latest
    command: ["start", "-r", "sync"]
    container_name: powersync-sync
    env_file:
      - .env
    environment:
      - NODE_OPTIONS=--max-old-space-size=1024
      - POWERSYNC_CONFIG_PATH=/config/powersync.yaml
    volumes:
      - ./config:/config
    networks:
      - powersync-net
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "fetch('http://localhost:${PS_PORT}/probes/liveness').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"
        ]
      interval: 5s
      timeout: 1s
      retries: 15

  powersync-api:
    image: journeyapps/powersync-service:latest
    command: ["start", "-r", "api"]
    env_file:
      - .env
    environment:
      - NODE_OPTIONS=--max-old-space-size=800
      - POWERSYNC_CONFIG_PATH=/config/powersync.yaml
    volumes:
      - ./config:/config
    depends_on:
      - powersync-sync
    networks:
      - powersync-net
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 1024M
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "fetch('http://localhost:${PS_PORT}/probes/liveness').then(r => r.ok ? process.exit(0) : process.exit(1)).catch(() => process.exit(1))"
        ]
      interval: 5s
      timeout: 1s
      retries: 15

  # powersync-migrate:
  #   image: journeyapps/powersync-service:latest
  #   command: ["migrate", "up"]
  #   environment:
  #     - PS_STORAGE_POSTGRESQL_URI=${PS_STORAGE_POSTGRESQL_URI}
  #     - PS_CONFIG_FILE=/config/powersync.yaml
  #   volumes:
  #     - ./config/powersync.yaml:/config/powersync.yaml:ro
  #   depends_on:
  #     - postgres-storage
  #   networks:
  #     - powersync-net

  nginx:
    image: nginx:alpine
    ports:
      - "8081:80"
      - "8443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - powersync-api
    networks:
      - powersync-net
    restart: unless-stopped

networks:
  powersync-net:
    driver: bridge

# volumes:
#   postgres_source_data:
#   postgres_storage_data:

# services:
#   postgres-source:
#     image: postgres:15
#     container_name: postgres-source
#     environment:
#       - POSTGRES_DB=${PS_SOURCE_DB:-testdb}
#       - POSTGRES_USER=${PS_SOURCE_USER:-postgres}
#       - POSTGRES_PASSWORD=${PS_SOURCE_PASSWORD:-postgres}
#       - POSTGRES_INITDB_ARGS=--data-checksums
#     command: postgres -c wal_level=logical
#     volumes:
#       - postgres_source_data:/var/lib/postgresql/data
#     networks:
#       - powersync-net
#     restart: unless-stopped
#     
#   postgres-storage:
#     image: postgres:15
#     container_name: postgres-storage
#     environment:
#       - POSTGRES_DB=${PS_STORAGE_DB:-powersync_storage}
#       - POSTGRES_USER=${PS_STORAGE_USER:-powersync}
#       - POSTGRES_PASSWORD=${PS_STORAGE_PASSWORD:-powersync123}
#     volumes:
#       - postgres_storage_data:/var/lib/postgresql/data
#     networks:
#       - powersync-net
#     restart: unless-stopped